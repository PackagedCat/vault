---
name: build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - release/**

jobs:
  product-metadata:
    runs-on: ubuntu-latest
    outputs:
      build-date: ${{ steps.get-metadata.outputs.build-date }}
      filepath: ${{ steps.generate-metadata-file.outputs.filepath }}
      go-version: ${{ steps.get-metadata.outputs.go-version }}
      matrix-test-group: ${{ steps.get-metadata.outputs.matrix-test-group }}
      package-name: ${{ steps.get-metadata.outputs.package-name }}
      vault-revision: ${{ steps.get-metadata.outputs.vault-revision }}
      vault-version: ${{ steps.get-metadata.outputs.vault-version }}
      vault-base-version: ${{ steps.get-metadata.outputs.vault-base-version }}
    steps:
      - uses: actions/checkout@v3
      - name: Get metadata
        id: get-metadata
        env:
          # MATRIX_MAX_TEST_GROUPS is required to determine the randomly selected
          # test group. It should be set to the highest test_group used in the
          # enos-run-matrices.
          MATRIX_MAX_TEST_GROUPS: 5
        run: |
          # shellcheck disable=SC2129
          echo "build-date=$(make ci-get-date)" >> "$GITHUB_OUTPUT"
          echo "go-version=$(cat ./.go-version)" >> "$GITHUB_OUTPUT"
          echo "matrix-test-group=$(make ci-get-matrix-group-id)" >> "$GITHUB_OUTPUT"
          echo "package-name=vault" >> "$GITHUB_OUTPUT"
          echo "vault-base-version=$(make ci-get-version-base)" >> "$GITHUB_OUTPUT"
          echo "vault-revision=$(make ci-get-revision)" >> "$GITHUB_OUTPUT"
          echo "vault-version=$(make ci-get-version)" >> "$GITHUB_OUTPUT"
      - uses: hashicorp/actions-generate-metadata@v1
        id: generate-metadata-file
        with:
          version: ${{ steps.get-metadata.outputs.vault-version }}
          product: ${{ steps.get-metadata.outputs.package-name }}
      - uses: actions/upload-artifact@v3
        with:
          name: metadata.json
          path: ${{ steps.generate-metadata-file.outputs.filepath }}
          if-no-files-found: error

  build-other:
    name: Other
    needs: product-metadata
    strategy:
      matrix:
        goos: [windows]
        goarch: [amd64]
      fail-fast: true
    uses: ./.github/workflows/build-vault-oss.yml
    with:
      create-packages: false
      goarch: ${{ matrix.goarch }}
      goos: ${{ matrix.goos }}
      go-tags: ui
      go-version: ${{ needs.product-metadata.outputs.go-version }}
      package-name: ${{ needs.product-metadata.outputs.package-name }}
      vault-version: ${{ needs.product-metadata.outputs.vault-version }}
    secrets: inherit

  completed-successfully:
    runs-on: ubuntu-latest
    needs:
      - build-other
    steps:
      - run: echo "All required build and test workflows have succeeded!"
